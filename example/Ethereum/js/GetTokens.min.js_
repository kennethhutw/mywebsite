/*! Ethereum-Dapps 2017.11.23
  * https://github.com/kennethhutw/Ethereum-Dapps
  * Copyright (c) 2015 Kenneth Hu; Licensed MIT 
  * Email : Kenneth.hu@hotmail.com
  */
eval(function (p, a, c, k, e, d) { e = function (c) { return (c < a ? "" : e(parseInt(c / a))) + ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36)) }; if (!''.replace(/^/, String)) { while (c--) d[e(c)] = k[c] || e(c); k = [function (e) { return d[e] }]; e = function () { return '\\w+' }; c = 1; }; while (c--) if (k[c]) p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c]); return p; }('3={F:C,2y:1D,7:{},1a:2(){k 3.Y()},Y:2(){8 1C=\'1B 1G S =>\';8 F=A 1F("O://L.1E.K/",{1A:(1d,18)=>18(C,1w.1v(1d,\'1u\')),});4=A 1z(F);G(1y 4!==\'1x\'){3.R(I);4.1Q.1P=P;4.j.1O=P;8 1T=1;}X{1S(\'1R Q 1N 1J 15 1I 1H S!\');k}3.T();3.M();3.1h();},T:2(){},R:2(I){8 U=4.j.14(1M);3.7.9=U.1L(I);3.Z();},M:2(){$(1K).1j(\'1l\',\'.1q-1m\',3.V)},V:2(){},1p:2(){8 o=$("#1n").1o();3.7.9.17.f(o,10,2(6,v){g.h("v : "+v);g.h("6 : "+6)});4.j.J(\'y\',2(z,c){g.h(4.l(c.b())+" u")});4.j.J(o,2(z,c){g.h(4.l(c.b())+" u")});3.7.9.1b.f(\'y\',2(6,c){g.h(4.l(c.b())+" 13")});3.7.9.1b.f(o,2(6,c){g.h(4.l(c.b())+" 13")});8 1s="";8 1i=3.7.9.17.1t(o,5,{16:"y"});8 B=1r;8 1k=1U;2m E={16:\'y\',15:o,2l:\'2n\',2p:2o,B:B+1,2h:1i};8 H=$(\'#2g\');4.j.2i(E,2(6,r){G(6!=C){g.z("2k W 2j E: "+6);H.N("<p>"+6+"</p>")}X{g.h("2x 2w 2z\'s 2s  r: "+r);H.N("<a 2r=\'O://L.2t.K/2v/"+r+"\' 2u=\'21\'>"+r+"</a>")}})},20:2(i){8 w=\'\';Q{22 a=i%10;i=24.23(i/10);w=a+w}W(i>0)k w},11:2(n){8 t=(n+"");G(t.1Z(".")>-1)t=t.D(".","").D(/\\d+$/,2(m){k--m});k t.D(/(\\d+)e\\+?(\\d+)/,2(m,1e,1c){k 1e+A 2d(+1c).2f("0")+"0"})},1h:2(){3.7.9.1f.f(2(6,v){3.1g=v.b();$("#x-1f").q(3.1g)});3.7.9.19.f(2(6,v){3.12=v.b();$("#x-19").q(3.12);});3.7.9.27.f(2(6,v){$("#x-26").q(3.11(v.b())/28)});3.7.9.2a.f(2(6,v){$("#x-29").q(v.b()+" u")});3.7.9.2e.f(2(6,v){3.2b=2c(4.l(v.b()));$("#25-1Y").q(v.b()+" u")});4.j.J(3.7.9.1X,2(z,c){$("#14-1V").q(4.l(c.b())+" u")})},Z:2(){},};$(2(){$(1W).2q(2(){3.1a()})});', 62, 160, '||function|App|web3||err|contracts|var|Token||toString|result|||call|console|log||eth|return|fromWei|||_0||html|txHash||nStr|Ether||str|tokens|0x73F2662412C20dAaB7081D935B81575B14Ae6e81|error|new|gasPrice|null|replace|transaction|web3Provider|if|TXRow|contractAddress|getBalance|io|rinkeby|bindEvents|append|https|tokenonwer|do|initContract|network|displayAccountInfo|TokenContract|handleBuy|while|else|initWeb3|listenToEvents||toNum|tokenSymbol|KK|contract|to|from|transfer|cb|symbol|init|balanceOf|g2|rawTx|g1|name|tokenName|populateTokenData|setData|on|gasLimit|click|buy|ToAddress|val|GetToken|btn|1000000000000|password|getData|0xb9deadfaf3d9bea5c9459d61525fc117be69ac865b751357c35b0d192db858c7|sign|ethSigner|undefined|typeof|Web3|signTransaction|Current|networkName|0x0|infura|SignerProvider|Etherum|ethereum|any|connect|document|at|TokenABI|not|coinbase|defaultAccount|settings|You|alert|price|90000|balance|window|address|cost|indexOf|toFix|_1|let|trunc|Math|token|total|totalSupply|1000000000000000000|sold|buyPrice|tokenPrice|parseFloat|Array|sellPrice|join|TxRow|data|sendTransaction|sending|Error|value|const|0x00|50000|gas|load|href|you|etherscan|target|tx|Sent|Transaction|account|here'.split('|'), 0, {}))
